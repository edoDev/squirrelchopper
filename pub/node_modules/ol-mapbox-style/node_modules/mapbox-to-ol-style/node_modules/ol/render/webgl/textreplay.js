import _ol_ from '../../index';


if (false) {
 /**
  * @constructor
  * @param {number} tolerance Tolerance.
  * @param {ol.Extent} maxExtent Max extent.
  * @struct
  */
 var _ol_render_webgl_TextReplay_ = function(tolerance, maxExtent) {};

 /**
  * @param {ol.style.Text} textStyle Text style.
  */
 _ol_render_webgl_TextReplay_.prototype.setTextStyle = function(textStyle) {};

 /**
  * @param {ol.webgl.Context} context Context.
  * @param {ol.Coordinate} center Center.
  * @param {number} resolution Resolution.
  * @param {number} rotation Rotation.
  * @param {ol.Size} size Size.
  * @param {number} pixelRatio Pixel ratio.
  * @param {number} opacity Global opacity.
  * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features
  *  to skip.
  * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.
  * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.
  * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting
  *  this extent are checked.
  * @return {T|undefined} Callback result.
  * @template T
  */
 _ol_render_webgl_TextReplay_.prototype.replay = function(context,
     center, resolution, rotation, size, pixelRatio,
     opacity, skippedFeaturesHash,
     featureCallback, oneByOne, opt_hitExtent) {
   return undefined;
 };

 /**
  * @param {Array.<number>} flatCoordinates Flat coordinates.
  * @param {number} offset Offset.
  * @param {number} end End.
  * @param {number} stride Stride.
  * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.
  * @param {ol.Feature|ol.render.Feature} feature Feature.
  */
 _ol_render_webgl_TextReplay_.prototype.drawText = function(flatCoordinates, offset,
     end, stride, geometry, feature) {};

 /**
  * @abstract
  * @param {ol.webgl.Context} context Context.
  */
 _ol_render_webgl_TextReplay_.prototype.finish = function(context) {};

 /**
  * @param {ol.webgl.Context} context WebGL context.
  * @return {function()} Delete resources function.
  */
 _ol_render_webgl_TextReplay_.prototype.getDeleteResourcesFunction = function(context) {
   return _ol_.nullFunction;
 };
}
export default _ol_render_webgl_TextReplay_;
